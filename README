== Intro ==
HidoiBot is an awful IRC bot written in Ruby.
HidoiBot v1 was created in the second half of 2010 with the intent of learning Ruby. It was also written badly.
HidoiBot v2 is a near-complete rewrite of HidoiBot v1, done in early 2011, with slightly better writing.
There are several notable inadequacies in v2 -- I had to 'hack' in solutions and implement 'half-past-six' code or HidoiBot v2 would never have been completed. Essentially, corners were cut. So many, that it's beginning to look like a circle.

== Installation ==
HidoiBot is tested to run on GNU/Linux and Windows, with Ruby 1.9.2 installed. Older versions of Ruby might work, but are untested.

Pull the source and install the following stuff:

Absolutely required:
    Ruby - tested on version 1.9.2
    rubygems - this should come with a Ruby install

Pretty much required:
    nokogiri - to install do 'gem install nokogiri', this gem is used in many default plugins
    
Might be required - if you're getting an error try these:
    sqlite3 - 'gem install sqlite3'
    json or json_pure - 'gem install json' or 'gem install json_pure'

Stuff you might want:
    A proper webserver on the bot's computer, such as Apache2 or lighttpd
    MPC with Web UI turned on for MPC sync/now playing capabilities
    An Internet connection
        
== Quick Start ==
1. Install the REQUIRED STUFF
2. Modify the config files in directory 'cfg'
3. Run HidoiBot.rb
5. Configure default plugins as needed
    
== Configuring default plugins ==
1. MpcSync - Check if MPC's address, port and the port on which you are listening for 'GO!' packets are correct.
2. WolframAlpha - If you wish to use your own W|A API key, change it here. W|A imposes a monthly limit on API calls.
3. RottenTomatoes - Same deal here as WolframAlpha. Insert your own API key if you so desire.
4. ImageScraper - If you wish to change the directory scraped images are saved in, change it here.
5. MarkovChat - "settings/markovChat/braintrain.txt" is the training file for Markov chat. Use ~chat train to train HidoiBot.

Additionally, required authorisation levels can be changed for all bot functions in their respective BotPlugin files.

== Usage ==
To access commands:
    <trigger><hook>
    eg, if trigger is '~' and hook is 'ping' type '~ping' in a channel which HidoiBot is in.
    Default trigger: ~
    
To access command list:
    help
    
Individual plugin help:
    help <plugin>
    
To auth:
    auth <password>
    Passwords and authlevels are found in 'cfg/authConfig.rb'
    Default passwords: password1, password2, password3 (you should have already changed them)
    
If you are using a web server:
    Make the root directory 'public'

== Plugins And Their Creation ==
HidoiBot has a plugin system which can be used to include additional functionality.
See 'botPlugins/Ping.rb' for details.
See 'botPlugins/inactive/Template.rb' for a plugin template

Notable Default plugins:
    1. ImageScraper, ImageTagger, ImageSearch
    2. Media Player Classic syncronisation and now playing information
    3. User and channel statistics and user last seen information
    4. Hiragana and Katakana to Romanji transliterator
    5. MarkovChat, a simple chatbot interface

To turn plugins off:
    1. The plugin might have an internal 'off' switch, check help <plugin>
    2. Move the plugin into the inactive directory, and do a reload
    
To add plugins: 
    For most plugins, dump the plugin.rb file in 'BotPlugins' and it'll work fine.
    
To change plugin auth level:
    Open the file with the plugin you wish to modify the required authorisation level for and search for instances of 'requiredLevel' or authCheck. They should be in the 'initialize' method.